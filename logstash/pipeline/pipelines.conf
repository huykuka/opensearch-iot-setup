input {
    # Beats input for all data (MQTT via Filebeat, logs, metrics)
    beats {
        port => 5044
    }
}

filter {
    # Process Filebeat MQTT energy data
    if [agent][type] == "filebeat" and [input][type] == "mqtt" {
        # Parse JSON message from MQTT
        json {
            source => "message"
        }

        # Extract device ID from MQTT topic
        if [mqtt][topic] {
            grok {
                match => {
                    #$#%#$#placeholder03434#$#%#$# => #$#%#$#placeholder13434#$#%#$#
                }
            }
        }

        # Parse timestamp if present
        if [timestamp] {
            date {
                match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
                target => "@timestamp"
            }
        }

        # Convert numeric fields in bulk
        mutate {
            convert => {
                "voltage" => "float"
                "current" => "float"
                "power" => "float"
                "energy" => "float"
                "frequency" => "float"
            }
            add_field => {
                "data_type" => "energy-data"
                "processed_at" => "%{@timestamp}"
            }
            remove_field => [ "message", "[mqtt][qos]", "[mqtt][retain]" ]
        }
    }

    # Process Filebeat log files
    else if [agent][type] == "filebeat" and [input][type] == "log" {
        # Parse JSON logs if present
        if [message] =~ /^\ {
            .*
        }
        $/ {
            json {
                source => "message"
            }
        }

        mutate {
            add_field => {
                #$#%#$#placeholder03434#$#%#$# => #$#%#$#placeholder13434#$#%#$#
            }
        }
    }

    # Process Metricbeat data
    else if [agent][type] == "metricbeat" {
        mutate {
            add_field => {
                "data_type" => "metric-data"
                "metric_module" => "%{[metricset][module]}"
                "metric_name" => "%{[metricset][name]}"
            }
        }
    }
}

output {
    # Route to appropriate indices based on data type
    if [data_type] == "energy-data" {
        opensearch {
            hosts => "http://opensearch-node1:9200"
            user => "admin"
            password => "Uyenmit123@#"
            index => "energy-data-%{+YYYY.MM.dd}"
            ssl_certificate_verification => false
        }
    }
    else if [data_type] == "log-data" {
        opensearch {
            hosts => "http://opensearch-node1:9200"
            user => "admin"
            password => "Uyenmit123@#"
            index => "logs-%{+YYYY.MM.dd}"
            ssl_certificate_verification => false
        }
    }
    else if [data_type] == "metric-data" {
        opensearch {
            hosts => "http://opensearch-node1:9200"
            user => "admin"
            password => "Uyenmit123@#"
            index => "metrics-%{+YYYY.MM.dd}"
            ssl_certificate_verification => false
        }
    }
}
